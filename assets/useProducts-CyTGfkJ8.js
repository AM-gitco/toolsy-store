import{r}from"./router-BXFWiZbc.js";import{s as e}from"./index-ud4XQfz4.js";function t(r){return r.toLowerCase().replace(/[^a-z0-9]+/g,"-").replace(/(^-|-$)/g,"")}const a=()=>{const[a,o]=r.useState([]),[i,d]=r.useState(!0),[c,s]=r.useState(null),n=async()=>{try{d(!0);const{data:r,error:t}=await e.from("products").select("id, name, slug, description, detailed_description, price, original_price, category, rating, features, main_image_url, video_url, video_thumbnail_url, created_at, updated_at").order("created_at",{ascending:!1});if(t)throw t;o(r||[])}catch(r){s(r instanceof Error?r.message:"Failed to fetch products")}finally{d(!1)}};return r.useEffect(()=>{n()},[]),{products:a,loading:i,error:c,addProduct:async r=>{try{const a=t(r.name),{data:i,error:d}=await e.from("products").insert([{...r,slug:a}]).select("id, name, slug, description, detailed_description, price, original_price, category, rating, features, main_image_url, video_url, video_thumbnail_url, created_at, updated_at").single();if(d)throw d;return o(r=>[i,...r]),i}catch(a){throw new Error(a instanceof Error?a.message:"Failed to add product")}},updateProduct:async(r,a)=>{try{let i={...a};a.name&&(i.slug=t(a.name));const{data:d,error:c}=await e.from("products").select("*").eq("id",r).single();if(c)throw new Error("Product not found");const{data:s,error:n}=await e.from("products").update(i).eq("id",r).select("id, name, slug, description, detailed_description, price, original_price, category, rating, features, main_image_url, video_url, video_thumbnail_url, created_at, updated_at");if(n)throw n;if(!s||0===s.length)return o(e=>e.map(e=>e.id===r?d:e)),d;const u=s[0];return o(e=>e.map(e=>e.id===r?u:e)),u}catch(i){throw new Error(i instanceof Error?i.message:"Failed to update product")}},deleteProduct:async r=>{try{const{error:t}=await e.from("products").delete().eq("id",r);if(t)throw t;o(e=>e.filter(e=>e.id!==r))}catch(t){throw new Error(t instanceof Error?t.message:"Failed to delete product")}},refetch:n}},o=t=>{const[a,o]=r.useState([]),[i,d]=r.useState(!1),c=async r=>{try{d(!0);const{data:t,error:a}=await e.from("product_images").select("*").eq("product_id",r).order("display_order",{ascending:!0});if(a)throw a;o(t||[])}catch(t){}finally{d(!1)}};return r.useEffect(()=>{t&&c(t)},[t]),{images:a,loading:i,addImage:async r=>{try{const{data:t,error:a}=await e.from("product_images").insert([r]).select().single();if(a)throw a;return o(r=>[...r,t]),t}catch(t){throw new Error(t instanceof Error?t.message:"Failed to add image")}},refetch:()=>t&&c(t)}};export{a,o as u};
